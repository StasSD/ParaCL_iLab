


 UNIT TEST 1



 TEST 1 PASSED



 UNIT TEST 2



 TEST 2 PASSED



 UNIT TEST 3
Running lexer...
Token: +
Token: -
Token: =
Token: <=
Token: >
Token: <



 TEST 3 PASSED



 UNIT TEST 4
Running lexer...
Lexer is done.
Token: +
Token: -
Token: ==
Token: ==
Token: =
Token: <=
Token: >
Token: <
Token: while
Token: if
Token: ?
Token: =



 TEST 4 PASSED



 UNIT TEST 5
Running lexer...
Lexer is done.
Token: if
Token: (
Token: )
Token: ;
Token: {
Token: }
Token: ;



 TEST 5 PASSED



 UNIT TEST 6
Running lexer...
Lexer is done.
Token: if
Token: (
Token: (
Token: Identifier
Token: *
Token: Value
Token: +
Token: Value
Token: )
Token: !=
Token: Identifier
Token: )
Token: {
Token: Identifier
Token: =
Token: Identifier
Token: ;
Token: Identifier
Token: =
Token: ?
Token: ;
Token: }
Token: ;



 TEST 6 PASSED



 UNIT TEST 8
Running lexer...
Lexer is done.
Node contains:Token: if
Node contains:Token: (



 TEST 8 PASSED



 UNIT TEST 9
Running lexer...
Lexer is done.



 TEST 9 PASSED



 UNIT TEST 10
Running lexer...
Lexer is done.



 TEST 10 PASSED



 Opening test file
File size: 206
Read:206
Buf:n = 0;
a = 0;
b = 1;
x = ?;

while (n < x) {
  n = n + 1;

  if (n == 1) {
    print a;
    }

  if (n == 2) {
    print b;
    }

  if (n > 2) {
    tmp = b;
    b = a + b;
    a = tmp;
    print b;
  }
}

Running lexer...
Lexer is done.



 Testing with test file complete
